start on (mounted MOUNTPOINT=/boot or mounted MOUNTPOINT=/lib/modules)

env CPUFREQ_GOVERNOR=
task

nice -2

console none

pre-start script
    [ ! -e /etc/default/xbian-module-init-tools ] || . /etc/default/xbian-module-init-tools || :

    if [ -n "$CPUFREQ_GOVERNOR" ]; then
        # Assuming nothing changed it yet, this is also the default one.
        PREVIOUS_GOVERNOR=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)

        modprobe -q cpufreq_${CPUFREQ_GOVERNOR} || :
        # Note: in case the user specifies an invalid governor, the kernel is
        # intelligent enough to not change the current valid governor.  That said,
        # we need to restore the previous one as we changed it to "powersave" on the
        # Raspberry Pi (see above).
        if ! echo $CPUFREQ_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor; then
            echo $PREVIOUS_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor || :
        fi
    fi

    modules=$(awk '/modules-load/{ sub(".*modules-load=",""); print $1 }' /proc/cmdline 2>/dev/null | tr ',' '\n')
    echo "$modules" | sed "s/[=:;]/ /g" | while read module args; do
        [ "$module" ] || continue
        p=''; argl=''
        for a in $args; do
            if [ -z "$p" ]; then
                p=$a
            else
                argl="$argl $p=$a"
                p=''
            fi
        done
        modprobe $module$argl || :
    done

    [ -e /etc/modules.xbian ] || exit 0
    grep '^[^#]' /etc/modules.xbian |
        while read module args
        do
            [ "$module" ] || continue
            modprobe $module $args || :
        done
end script
